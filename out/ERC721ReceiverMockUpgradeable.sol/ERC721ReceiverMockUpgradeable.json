{"abi":[{"type":"function","name":"onERC721Received","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"event","name":"Received","inputs":[{"name":"operator","type":"address","indexed":false,"internalType":"address"},{"name":"from","type":"address","indexed":false,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"gas","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x60808060405234601557610277908161001a8239f35b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c63150b7a0214610025575f80fd5b34610229576080366003190112610229576004359073ffffffffffffffffffffffffffffffffffffffff82168092036102295760243573ffffffffffffffffffffffffffffffffffffffff8116809103610229576064359067ffffffffffffffff8211610229573660238301121561022957816004013567ffffffffffffffff811161022d57601f8101601f19908116603f0116840167ffffffffffffffff81118582101761022d576040528084526020840192366024838301011161022957815f926024602093018637850101525f549260ff8460301c16600481101561021557600181036101545760405162461bcd60e51b815260206004820152601d60248201527f45524337323152656365697665724d6f636b3a20726576657274696e670000006044820152606490fd5b60028103610160575f80fd5b600314610201576020947f28fa6e16458f9c24aa59ddd4085264573006dbe30304837873c7deafc702b0389360c0925a90604051958694855289850152604435604085015260a060608501525180928160a08601528585015e5f8383018501526080830152601f01601f19168101030190a160405160d09190911b7fffffffff00000000000000000000000000000000000000000000000000000000168152f35b634e487b7160e01b5f52601260045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfea264697066735822122073f5a2b1ea98b65e58164a1311777af81da717e5d7b23bf7511c67581d0510cd64736f6c634300081a0033","sourceMap":"159:1258:358:-:0;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6080806040526004361015610012575f80fd5b5f3560e01c63150b7a0214610025575f80fd5b34610229576080366003190112610229576004359073ffffffffffffffffffffffffffffffffffffffff82168092036102295760243573ffffffffffffffffffffffffffffffffffffffff8116809103610229576064359067ffffffffffffffff8211610229573660238301121561022957816004013567ffffffffffffffff811161022d57601f8101601f19908116603f0116840167ffffffffffffffff81118582101761022d576040528084526020840192366024838301011161022957815f926024602093018637850101525f549260ff8460301c16600481101561021557600181036101545760405162461bcd60e51b815260206004820152601d60248201527f45524337323152656365697665724d6f636b3a20726576657274696e670000006044820152606490fd5b60028103610160575f80fd5b600314610201576020947f28fa6e16458f9c24aa59ddd4085264573006dbe30304837873c7deafc702b0389360c0925a90604051958694855289850152604435604085015260a060608501525180928160a08601528585015e5f8383018501526080830152601f01601f19168101030190a160405160d09190911b7fffffffff00000000000000000000000000000000000000000000000000000000168152f35b634e487b7160e01b5f52601260045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfea264697066735822122073f5a2b1ea98b65e58164a1311777af81da717e5d7b23bf7511c67581d0510cd64736f6c634300081a0033","sourceMap":"159:1258:358:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;159:1258:358;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;159:1258:358;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:33;;159:1258;;;;-1:-1:-1;;;1050:39:358;;159:1258;;1050:39;;159:1258;;;;;;;;;;;;;1050:39;997:292;1120:26;1110:36;;1120:26;;159:1258;1162:8;;1106:183;1201:11;1191:21;1187:102;;159:1258;1106:183;1303:50;1106:183;159:1258;1106:183;1343:9;159:1258;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;159:1258:358;;;1303:50;;;;159:1258;;;;;;;;;;;;1187:102;159:1258;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/openzeppelin-contracts-upgradeable-master/contracts/mocks/ERC721ReceiverMockUpgradeable.sol\":\"ERC721ReceiverMockUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/v4-periphery/lib/v4-core/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/v4-core/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"],\"viaIR\":true},\"sources\":{\"src/libraries/openzeppelin-contracts-upgradeable-master/contracts/mocks/ERC721ReceiverMockUpgradeable.sol\":{\"keccak256\":\"0x79a137a3daebfb8f6210dae892f842b762014bf9d6917256cb27e016695741d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65fa3dc362e1459a7c9df55a04311291deb1af49c7a5d173fffcac0d8a7766a9\",\"dweb:/ipfs/QmZhimA5MVcUVdM7XEamLG6XBKaVcJX8Qua2QMKF4jEvD2\"]},\"src/libraries/openzeppelin-contracts-upgradeable-master/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe9fa1beb63e4a09637701f783982ba80380d630d600c9cafe26b68bf58be1b2\",\"dweb:/ipfs/QmRA3GXhTWys88joD9x8xYhdjzvGwmDGLMMzGw3LxbSEge\"]},\"src/libraries/openzeppelin-contracts-upgradeable-master/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0x3d03f5cb8b9f17b75c3b6eb4921b1fe7b87ed77cf0c8638496eee5183a5101e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5de186747a6b768851aeae14d616aeda91063e6f2330e735c4b83f6f1d8495d7\",\"dweb:/ipfs/QmWwSX9NKRS6qtQoKyS6S6HHmJ6kHhuar3LwssrejDMAMz\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":false},{"internalType":"address","name":"from","type":"address","indexed":false},{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":false},{"internalType":"bytes","name":"data","type":"bytes","indexed":false},{"internalType":"uint256","name":"gas","type":"uint256","indexed":false}],"type":"event","name":"Received","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]}],"devdoc":{"kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","ds-test/=lib/v4-periphery/lib/v4-core/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/v4-core/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/","openzeppelin-contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/","permit2/=lib/v4-periphery/lib/permit2/","solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/","v4-core/=lib/v4-periphery/lib/v4-core/src/","v4-periphery/=lib/v4-periphery/"],"optimizer":{"enabled":true,"runs":800},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/libraries/openzeppelin-contracts-upgradeable-master/contracts/mocks/ERC721ReceiverMockUpgradeable.sol":"ERC721ReceiverMockUpgradeable"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"src/libraries/openzeppelin-contracts-upgradeable-master/contracts/mocks/ERC721ReceiverMockUpgradeable.sol":{"keccak256":"0x79a137a3daebfb8f6210dae892f842b762014bf9d6917256cb27e016695741d4","urls":["bzz-raw://65fa3dc362e1459a7c9df55a04311291deb1af49c7a5d173fffcac0d8a7766a9","dweb:/ipfs/QmZhimA5MVcUVdM7XEamLG6XBKaVcJX8Qua2QMKF4jEvD2"],"license":"MIT"},"src/libraries/openzeppelin-contracts-upgradeable-master/contracts/proxy/utils/Initializable.sol":{"keccak256":"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9","urls":["bzz-raw://fe9fa1beb63e4a09637701f783982ba80380d630d600c9cafe26b68bf58be1b2","dweb:/ipfs/QmRA3GXhTWys88joD9x8xYhdjzvGwmDGLMMzGw3LxbSEge"],"license":"MIT"},"src/libraries/openzeppelin-contracts-upgradeable-master/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol":{"keccak256":"0x3d03f5cb8b9f17b75c3b6eb4921b1fe7b87ed77cf0c8638496eee5183a5101e0","urls":["bzz-raw://5de186747a6b768851aeae14d616aeda91063e6f2330e735c4b83f6f1d8495d7","dweb:/ipfs/QmWwSX9NKRS6qtQoKyS6S6HHmJ6kHhuar3LwssrejDMAMz"],"license":"MIT"}},"version":1},"id":358}