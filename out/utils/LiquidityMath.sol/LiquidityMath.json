{"abi":[{"type":"function","name":"getAmount0ForLiquidity","inputs":[{"name":"sqrtPriceAX96","type":"uint160","internalType":"uint160"},{"name":"sqrtPriceBX96","type":"uint160","internalType":"uint160"},{"name":"liquidity","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"amount0","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"getAmount1ForLiquidity","inputs":[{"name":"sqrtPriceAX96","type":"uint160","internalType":"uint160"},{"name":"sqrtPriceBX96","type":"uint160","internalType":"uint160"},{"name":"liquidity","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"amount1","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"getAmountsForLiquidity","inputs":[{"name":"sqrtPriceX96","type":"uint160","internalType":"uint160"},{"name":"sqrtPriceAX96","type":"uint160","internalType":"uint160"},{"name":"sqrtPriceBX96","type":"uint160","internalType":"uint160"},{"name":"liquidity","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"getLiquidityForAmount0","inputs":[{"name":"sqrtPriceAX96","type":"uint160","internalType":"uint160"},{"name":"sqrtPriceBX96","type":"uint160","internalType":"uint160"},{"name":"amount0","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"liquidity","type":"uint128","internalType":"uint128"}],"stateMutability":"pure"},{"type":"function","name":"getLiquidityForAmount1","inputs":[{"name":"sqrtPriceAX96","type":"uint160","internalType":"uint160"},{"name":"sqrtPriceBX96","type":"uint160","internalType":"uint160"},{"name":"amount1","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"liquidity","type":"uint128","internalType":"uint128"}],"stateMutability":"pure"},{"type":"function","name":"getLiquidityForAmounts","inputs":[{"name":"sqrtPriceX96","type":"uint160","internalType":"uint160"},{"name":"sqrtPriceAX96","type":"uint160","internalType":"uint160"},{"name":"sqrtPriceBX96","type":"uint160","internalType":"uint160"},{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"liquidity","type":"uint128","internalType":"uint128"}],"stateMutability":"pure"},{"type":"function","name":"toUint128","inputs":[{"name":"x","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"y","type":"uint128","internalType":"uint128"}],"stateMutability":"pure"}],"bytecode":{"object":"0x608080604052346015576106c0908161001a8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c806308c0f795146102d057806329e24cb71461029c5780636098fd4a146101bf57806367df6e89146101a65780636ac69a8e1461016a578063809fdd331461013b5763c72e160b14610066575f80fd5b346101375760803660031901126101375761007f6102e9565b6100876102ff565b90610090610315565b916064356001600160801b0381168103610137576040935f928382826001600160a01b038083169082161161012c575b50506001600160a01b0386811690831681116100f15750506100e3939450610469565b905b82519182526020820152f35b919450906001600160a01b03831611156101215750926101168261011c949583610469565b936103e8565b6100e5565b935061011c926103e8565b935091505f806100c0565b5f80fd5b346101375760203660031901126101375760206101596004356104e0565b6001600160801b0360405191168152f35b3461013757606036600319011261013757602061019e6101886102e9565b6101906102ff565b610198610365565b91610469565b604051908152f35b346101375760206101596101b93661032b565b91610419565b346101375760a03660031901126101375760206101da6102e9565b6101e26102ff565b6101ea610315565b6064359160843582826001600160a01b0382166001600160a01b03821611610291575b50506001600160a01b038581169590831686116102305750506101599350610419565b92909391946001600160a01b038216115f146102855782916102569161025c9594610419565b936103af565b6001600160801b0381166001600160801b038316105f1461027e57505b610159565b9050610159565b915050610279926103af565b93509150868061020d565b3461013757606036600319011261013757602061019e6102ba6102e9565b6102c26102ff565b6102ca610365565b916103e8565b346101375760206101596102e33661032b565b916103af565b600435906001600160a01b038216820361013757565b602435906001600160a01b038216820361013757565b604435906001600160a01b038216820361013757565b6060906003190112610137576004356001600160a01b038116810361013757906024356001600160a01b0381168103610137579060443590565b604435906001600160801b038216820361013757565b906001600160a01b03809116911603906001600160a01b03821161039b57565b634e487b7160e01b5f52601160045260245ffd5b916001600160a01b036103d36103df946103da94838116848316116103e25761037b565b1690610539565b6104e0565b90565b9061037b565b6001600160a01b036104116001600160801b03926103df9594838116848316116103e25761037b565b1691166105c1565b916103da916103df936001600160a01b0382166001600160a01b03821611610463575b61045c6001600160a01b03916104568385168483166105c1565b9361037b565b169161060a565b9061043c565b916104b9906001600160a01b0392838116848616116104da575b7bffffffffffffffffffffffffffffffff00000000000000000000000084806104ac888561037b565b1692169260601b1661060a565b91169081156104c6570490565b634e487b7160e01b5f52601260045260245ffd5b93610483565b906001600160801b0382169182036104f457565b60405162461bcd60e51b815260206004820152601260248201527f6c6971756964697479206f766572666c6f7700000000000000000000000000006044820152606490fd5b908160601b905f19600160601b84099282808510940393808503948584111561013757146105ba57600160601b82910981805f03168092046002816003021880820260020302808202600203028082026002030280820260020302808202600203028091026002030293600183805f03040190848311900302920304170290565b5091500490565b81810291905f1982820991838084109303928084039384600160601b1115610137571461060157600160601b910990828211900360a01b910360601c1790565b50505060601c90565b91818302915f19818509938380861095039480860395868511156101375714610682579082910981805f03168092046002816003021880820260020302808202600203028082026002030280820260020302808202600203028091026002030293600183805f03040190848311900302920304170290565b50509150049056fea2646970667358221220ecf99c2d32f14c09005ec2483a1afa69d435047adc24099d84bfbf4fd039a25264736f6c634300081a0033","sourceMap":"152:6386:2:-:0;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x60806040526004361015610011575f80fd5b5f3560e01c806308c0f795146102d057806329e24cb71461029c5780636098fd4a146101bf57806367df6e89146101a65780636ac69a8e1461016a578063809fdd331461013b5763c72e160b14610066575f80fd5b346101375760803660031901126101375761007f6102e9565b6100876102ff565b90610090610315565b916064356001600160801b0381168103610137576040935f928382826001600160a01b038083169082161161012c575b50506001600160a01b0386811690831681116100f15750506100e3939450610469565b905b82519182526020820152f35b919450906001600160a01b03831611156101215750926101168261011c949583610469565b936103e8565b6100e5565b935061011c926103e8565b935091505f806100c0565b5f80fd5b346101375760203660031901126101375760206101596004356104e0565b6001600160801b0360405191168152f35b3461013757606036600319011261013757602061019e6101886102e9565b6101906102ff565b610198610365565b91610469565b604051908152f35b346101375760206101596101b93661032b565b91610419565b346101375760a03660031901126101375760206101da6102e9565b6101e26102ff565b6101ea610315565b6064359160843582826001600160a01b0382166001600160a01b03821611610291575b50506001600160a01b038581169590831686116102305750506101599350610419565b92909391946001600160a01b038216115f146102855782916102569161025c9594610419565b936103af565b6001600160801b0381166001600160801b038316105f1461027e57505b610159565b9050610159565b915050610279926103af565b93509150868061020d565b3461013757606036600319011261013757602061019e6102ba6102e9565b6102c26102ff565b6102ca610365565b916103e8565b346101375760206101596102e33661032b565b916103af565b600435906001600160a01b038216820361013757565b602435906001600160a01b038216820361013757565b604435906001600160a01b038216820361013757565b6060906003190112610137576004356001600160a01b038116810361013757906024356001600160a01b0381168103610137579060443590565b604435906001600160801b038216820361013757565b906001600160a01b03809116911603906001600160a01b03821161039b57565b634e487b7160e01b5f52601160045260245ffd5b916001600160a01b036103d36103df946103da94838116848316116103e25761037b565b1690610539565b6104e0565b90565b9061037b565b6001600160a01b036104116001600160801b03926103df9594838116848316116103e25761037b565b1691166105c1565b916103da916103df936001600160a01b0382166001600160a01b03821611610463575b61045c6001600160a01b03916104568385168483166105c1565b9361037b565b169161060a565b9061043c565b916104b9906001600160a01b0392838116848616116104da575b7bffffffffffffffffffffffffffffffff00000000000000000000000084806104ac888561037b565b1692169260601b1661060a565b91169081156104c6570490565b634e487b7160e01b5f52601260045260245ffd5b93610483565b906001600160801b0382169182036104f457565b60405162461bcd60e51b815260206004820152601260248201527f6c6971756964697479206f766572666c6f7700000000000000000000000000006044820152606490fd5b908160601b905f19600160601b84099282808510940393808503948584111561013757146105ba57600160601b82910981805f03168092046002816003021880820260020302808202600203028082026002030280820260020302808202600203028091026002030293600183805f03040190848311900302920304170290565b5091500490565b81810291905f1982820991838084109303928084039384600160601b1115610137571461060157600160601b910990828211900360a01b910360601c1790565b50505060601c90565b91818302915f19818509938380861095039480860395868511156101375714610682579082910981805f03168092046002816003021880820260020302808202600203028082026002030280820260020302808202600203028091026002030293600183805f03040190848311900302920304170290565b50509150049056fea2646970667358221220ecf99c2d32f14c09005ec2483a1afa69d435047adc24099d84bfbf4fd039a25264736f6c634300081a0033","sourceMap":"152:6386:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;152:6386:2;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;-1:-1:-1;;;;;152:6386:2;;;;;;;;;;;;;-1:-1:-1;;;;;152:6386:2;;;;;;5965:29;5961:98;;152:6386;-1:-1:-1;;;;;;;152:6386:2;;;;;;6074:29;;152:6386;;6129:63;;;;;;;:::i;:::-;6070:460;;152:6386;;;;;;;;;;6070:460;152:6386;;-1:-1:-1;152:6386:2;-1:-1:-1;;;;;152:6386:2;;-1:-1:-1;152:6386:2;;;6267:62;;;;6353;6267;;;;:::i;:::-;6353;;:::i;:::-;6070:460;;6209:321;6456:63;;;;;:::i;5961:98::-;5996:63;-1:-1:-1;5996:63:2;-1:-1:-1;5961:98:2;;;;152:6386;;;;;;;;;;-1:-1:-1;;152:6386:2;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;152:6386:2;;;;;;;;;;;;;-1:-1:-1;;152:6386:2;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;152:6386:2;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;152:6386:2;;-1:-1:-1;;;;;152:6386:2;;3028:29;3024:98;;152:6386;-1:-1:-1;;;;;;;152:6386:2;;;;;;;3137:29;;152:6386;;3194:61;;;;;;:::i;3133:554::-;152:6386;;;;;-1:-1:-1;;;;;152:6386:2;;-1:-1:-1;3272:415:2;152:6386;;;3341:60;;;;3436;3341;;;:::i;:::-;3436;;:::i;:::-;-1:-1:-1;;;;;152:6386:2;;-1:-1:-1;;;;;152:6386:2;;3523:23;:49;152:6386;;;3523:49;;3133:554;;3523:49;;;3133:554;;3272:415;3615:61;;;;;;:::i;3024:98::-;3059:63;-1:-1:-1;3059:63:2;-1:-1:-1;3024:98:2;;;;152:6386;;;;;;-1:-1:-1;;152:6386:2;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;152:6386:2;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;152:6386:2;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;152:6386:2;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;152:6386:2;;;;;;;;;-1:-1:-1;;;;;152:6386:2;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;152:6386:2;;;;;;:::o;348:27:0:-;;-1:-1:-1;;;;;348:27:0;;152:6386:2;;;348:27:0;;-1:-1:-1;;;;;348:27:0;;;;:::o;:::-;;;;;;;;;;;;1827:367:2;;-1:-1:-1;;;;;2156:29:2;2103:84;1827:367;2113:73;1827:367;152:6386;;;;;;1992:29;1988:98;;2156:29;:::i;:::-;152:6386;2113:73;;:::i;:::-;2103:84;:::i;:::-;1827:367;:::o;1988:98::-;;2156:29;:::i;4839:359::-;-1:-1:-1;;;;;5143:29:2;-1:-1:-1;;;;;4839:359:2;5116:75;4839:359;;152:6386;;;;;;5004:29;5000:98;;5143:29;:::i;:::-;152:6386;;;5116:75;:::i;929:459::-;;1311:69;929:459;1301:80;929:459;-1:-1:-1;;;;;152:6386:2;;-1:-1:-1;;;;;152:6386:2;;1094:29;1090:98;;929:459;1350:29;-1:-1:-1;;;;;152:6386:2;1221:63;152:6386;;;;;;1221:63;:::i;:::-;1350:29;;:::i;:::-;152:6386;1311:69;;:::i;1090:98::-;1158:30;1090:98;;4051:430;;4328:130;4051:430;-1:-1:-1;;;;;4051:430:2;152:6386;;;;;;4216:29;4212:98;;4051:430;308:2:0;4404:29:2;;;;;;:::i;:::-;152:6386;;;308:2:0;;;;4328:130:2;:::i;:::-;152:6386;;308:2:0;;;;;;4051:430:2;:::o;308:2:0:-;348:27;;;-1:-1:-1;308:2:0;;;;;-1:-1:-1;308:2:0;4212:98:2;;;;330:131;;-1:-1:-1;;;;;152:6386:2;;410:21;;;152:6386;;330:131::o;152:6386::-;;;-1:-1:-1;;;152:6386:2;;;;;;;;;;;;;;;;;;;;741:4141:1;;152:6386:2;;;1347:147:1;;;-1:-1:-1;;;1347:147:1;;;;;;;;;;;;;1619:19;;;;152:6386:2;;;1720:10:1;1716:177;;-1:-1:-1;;;2224:95:1;;;152:6386:2;;;;2716:31:1;2811:94;;;3776:1;152:6386:2;3757:1:1;152:6386:2;3756:21:1;152:6386:2;;;3776:1:1;152:6386:2;;;;;3776:1:1;152:6386:2;;;;;3776:1:1;152:6386:2;;;;;3776:1:1;152:6386:2;;;;;3776:1:1;152:6386:2;;;;;3776:1:1;152:6386:2;;3254:96:1;;;;152:6386:2;3254:96:1;;;2391:145;;;;;;152:6386:2;2391:145:1;;2977:82;3363:21;152:6386:2;741:4141:1;:::o;1716:177::-;1750:98;;;;1865:13;:::o;741:4141::-;152:6386:2;;;;741:4141:1;-1:-1:-1;;741:4141:1;;1347:147;;;;;;;;;;;;1619:19;;-1:-1:-1;;;1619:19:1;152:6386:2;;;1720:10:1;1716:177;;-1:-1:-1;;;2224:95:1;;2391:145;;;;;;152:6386:2;;2391:145:1;;2977:82;;3363:21;741:4141;:::o;1716:177::-;1750:98;;;;;1865:13;:::o;741:4141::-;;152:6386:2;;;;-1:-1:-1;;152:6386:2;741:4141:1;1347:147;;;;;;;;;;;;1619:19;;;;152:6386:2;;;1720:10:1;1716:177;;2224:95;;;;152:6386:2;;;;2716:31:1;2811:94;;;3776:1;152:6386:2;3757:1:1;152:6386:2;3756:21:1;152:6386:2;;;3776:1:1;152:6386:2;;;;;3776:1:1;152:6386:2;;;;;3776:1:1;152:6386:2;;;;;3776:1:1;152:6386:2;;;;;3776:1:1;152:6386:2;;;;;3776:1:1;152:6386:2;;3254:96:1;;;;152:6386:2;3254:96:1;;;2391:145;;;;;;152:6386:2;2391:145:1;;2977:82;3363:21;152:6386:2;741:4141:1;:::o;1716:177::-;1750:98;;;;;1865:13;:::o","linkReferences":{}},"methodIdentifiers":{"getAmount0ForLiquidity(uint160,uint160,uint128)":"6ac69a8e","getAmount1ForLiquidity(uint160,uint160,uint128)":"29e24cb7","getAmountsForLiquidity(uint160,uint160,uint160,uint128)":"c72e160b","getLiquidityForAmount0(uint160,uint160,uint256)":"67df6e89","getLiquidityForAmount1(uint160,uint160,uint256)":"08c0f795","getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256)":"6098fd4a","toUint128(uint256)":"809fdd33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceAX96\",\"type\":\"uint160\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceBX96\",\"type\":\"uint160\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"name\":\"getAmount0ForLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceAX96\",\"type\":\"uint160\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceBX96\",\"type\":\"uint160\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"name\":\"getAmount1ForLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceAX96\",\"type\":\"uint160\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceBX96\",\"type\":\"uint160\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"name\":\"getAmountsForLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceAX96\",\"type\":\"uint160\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceBX96\",\"type\":\"uint160\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"}],\"name\":\"getLiquidityForAmount0\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceAX96\",\"type\":\"uint160\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceBX96\",\"type\":\"uint160\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"getLiquidityForAmount1\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceAX96\",\"type\":\"uint160\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceBX96\",\"type\":\"uint160\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"getLiquidityForAmounts\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"toUint128\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"y\",\"type\":\"uint128\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getAmount0ForLiquidity(uint160,uint160,uint128)\":{\"params\":{\"liquidity\":\"The liquidity being valued\",\"sqrtPriceAX96\":\"A sqrt price representing the first tick boundary\",\"sqrtPriceBX96\":\"A sqrt price representing the second tick boundary\"},\"returns\":{\"amount0\":\"The amount of token0\"}},\"getAmount1ForLiquidity(uint160,uint160,uint128)\":{\"params\":{\"liquidity\":\"The liquidity being valued\",\"sqrtPriceAX96\":\"A sqrt price representing the first tick boundary\",\"sqrtPriceBX96\":\"A sqrt price representing the second tick boundary\"},\"returns\":{\"amount1\":\"The amount of token1\"}},\"getAmountsForLiquidity(uint160,uint160,uint160,uint128)\":{\"params\":{\"liquidity\":\"The liquidity being valued\",\"sqrtPriceAX96\":\"A sqrt price representing the first tick boundary\",\"sqrtPriceBX96\":\"A sqrt price representing the second tick boundary\",\"sqrtPriceX96\":\"A sqrt price representing the current pool prices\"},\"returns\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\"}},\"getLiquidityForAmount0(uint160,uint160,uint256)\":{\"details\":\"Calculates amount0 * (sqrt(upper) * sqrt(lower)) / (sqrt(upper) - sqrt(lower))\",\"params\":{\"amount0\":\"The amount0 being sent in\",\"sqrtPriceAX96\":\"A sqrt price representing the first tick boundary\",\"sqrtPriceBX96\":\"A sqrt price representing the second tick boundary\"},\"returns\":{\"liquidity\":\"The amount of returned liquidity\"}},\"getLiquidityForAmount1(uint160,uint160,uint256)\":{\"details\":\"Calculates amount1 / (sqrt(upper) - sqrt(lower)).\",\"params\":{\"amount1\":\"The amount1 being sent in\",\"sqrtPriceAX96\":\"A sqrt price representing the first tick boundary\",\"sqrtPriceBX96\":\"A sqrt price representing the second tick boundary\"},\"returns\":{\"liquidity\":\"The amount of returned liquidity\"}},\"getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 being sent in\",\"amount1\":\"The amount of token1 being sent in\",\"sqrtPriceAX96\":\"A sqrt price representing the first tick boundary\",\"sqrtPriceBX96\":\"A sqrt price representing the second tick boundary\",\"sqrtPriceX96\":\"A sqrt price representing the current pool prices\"},\"returns\":{\"liquidity\":\"The maximum amount of liquidity received\"}},\"toUint128(uint256)\":{\"params\":{\"x\":\"The uint258 to be downcasted\"},\"returns\":{\"y\":\"The passed value, downcasted to uint128\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAmount0ForLiquidity(uint160,uint160,uint128)\":{\"notice\":\"Computes the amount of token0 for a given amount of liquidity and a price range\"},\"getAmount1ForLiquidity(uint160,uint160,uint128)\":{\"notice\":\"Computes the amount of token1 for a given amount of liquidity and a price range\"},\"getAmountsForLiquidity(uint160,uint160,uint160,uint128)\":{\"notice\":\"Computes the token0 and token1 value for a given amount of liquidity, the current pool prices and the prices at the tick boundaries\"},\"getLiquidityForAmount0(uint160,uint160,uint256)\":{\"notice\":\"Computes the amount of liquidity received for a given amount of token0 and price range\"},\"getLiquidityForAmount1(uint160,uint160,uint256)\":{\"notice\":\"Computes the amount of liquidity received for a given amount of token1 and price range\"},\"getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256)\":{\"notice\":\"Computes the maximum amount of liquidity received for a given amount of token0, token1, the current pool prices and the prices at the tick boundaries\"},\"toUint128(uint256)\":{\"notice\":\"Downcasts uint256 to uint128\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/utils/LiquidityMath.sol\":\"LiquidityMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/v4-periphery/lib/v4-core/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/v4-core/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"],\"viaIR\":true},\"sources\":{\"lib/v4-periphery/lib/v4-core/src/libraries/FixedPoint96.sol\":{\"keccak256\":\"0xf0a545fc5bbc271e8dbd191413dc03e8725d1f003df4d9d36ea7cdb73058c417\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5d1013d8b5c93024526f129b0a9271b35c578da09bcfe6c3240ff4d590ebc196\",\"dweb:/ipfs/QmX1GyF9jJhYGXst6PyK6HJvcfVQ69nNTnuBEBaEiAZPv7\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/FullMath.sol\":{\"keccak256\":\"0x4fc73a00817193fd3cac1cc03d8167d21af97d75f1815a070ee31a90c702b4c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3b2d66d36b1ad56b1ab6e2eb8a816740877b40b461c93f125e88621c8378e52\",\"dweb:/ipfs/QmPGvMZzKQvNiWKd8aRzzdW7oAizwrMgcMtnaworDkVHFC\"]},\"src/utils/LiquidityMath.sol\":{\"keccak256\":\"0xa5542303f90d7348c9b2af33c16beb510b7d5cdd7ae58c4779a173aa6e1ebcfd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://da92e2e7ce5ac2334f43ac11141417f4d5477286bec7e372e880d566a2ee1b49\",\"dweb:/ipfs/QmQm6jMm6EMkKqLGtm7LV286qGuQgccwdGaAzCVZaTTYB2\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint160","name":"sqrtPriceAX96","type":"uint160"},{"internalType":"uint160","name":"sqrtPriceBX96","type":"uint160"},{"internalType":"uint128","name":"liquidity","type":"uint128"}],"stateMutability":"pure","type":"function","name":"getAmount0ForLiquidity","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"}]},{"inputs":[{"internalType":"uint160","name":"sqrtPriceAX96","type":"uint160"},{"internalType":"uint160","name":"sqrtPriceBX96","type":"uint160"},{"internalType":"uint128","name":"liquidity","type":"uint128"}],"stateMutability":"pure","type":"function","name":"getAmount1ForLiquidity","outputs":[{"internalType":"uint256","name":"amount1","type":"uint256"}]},{"inputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"internalType":"uint160","name":"sqrtPriceAX96","type":"uint160"},{"internalType":"uint160","name":"sqrtPriceBX96","type":"uint160"},{"internalType":"uint128","name":"liquidity","type":"uint128"}],"stateMutability":"pure","type":"function","name":"getAmountsForLiquidity","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}]},{"inputs":[{"internalType":"uint160","name":"sqrtPriceAX96","type":"uint160"},{"internalType":"uint160","name":"sqrtPriceBX96","type":"uint160"},{"internalType":"uint256","name":"amount0","type":"uint256"}],"stateMutability":"pure","type":"function","name":"getLiquidityForAmount0","outputs":[{"internalType":"uint128","name":"liquidity","type":"uint128"}]},{"inputs":[{"internalType":"uint160","name":"sqrtPriceAX96","type":"uint160"},{"internalType":"uint160","name":"sqrtPriceBX96","type":"uint160"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"pure","type":"function","name":"getLiquidityForAmount1","outputs":[{"internalType":"uint128","name":"liquidity","type":"uint128"}]},{"inputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"internalType":"uint160","name":"sqrtPriceAX96","type":"uint160"},{"internalType":"uint160","name":"sqrtPriceBX96","type":"uint160"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"pure","type":"function","name":"getLiquidityForAmounts","outputs":[{"internalType":"uint128","name":"liquidity","type":"uint128"}]},{"inputs":[{"internalType":"uint256","name":"x","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toUint128","outputs":[{"internalType":"uint128","name":"y","type":"uint128"}]}],"devdoc":{"kind":"dev","methods":{"getAmount0ForLiquidity(uint160,uint160,uint128)":{"params":{"liquidity":"The liquidity being valued","sqrtPriceAX96":"A sqrt price representing the first tick boundary","sqrtPriceBX96":"A sqrt price representing the second tick boundary"},"returns":{"amount0":"The amount of token0"}},"getAmount1ForLiquidity(uint160,uint160,uint128)":{"params":{"liquidity":"The liquidity being valued","sqrtPriceAX96":"A sqrt price representing the first tick boundary","sqrtPriceBX96":"A sqrt price representing the second tick boundary"},"returns":{"amount1":"The amount of token1"}},"getAmountsForLiquidity(uint160,uint160,uint160,uint128)":{"params":{"liquidity":"The liquidity being valued","sqrtPriceAX96":"A sqrt price representing the first tick boundary","sqrtPriceBX96":"A sqrt price representing the second tick boundary","sqrtPriceX96":"A sqrt price representing the current pool prices"},"returns":{"amount0":"The amount of token0","amount1":"The amount of token1"}},"getLiquidityForAmount0(uint160,uint160,uint256)":{"details":"Calculates amount0 * (sqrt(upper) * sqrt(lower)) / (sqrt(upper) - sqrt(lower))","params":{"amount0":"The amount0 being sent in","sqrtPriceAX96":"A sqrt price representing the first tick boundary","sqrtPriceBX96":"A sqrt price representing the second tick boundary"},"returns":{"liquidity":"The amount of returned liquidity"}},"getLiquidityForAmount1(uint160,uint160,uint256)":{"details":"Calculates amount1 / (sqrt(upper) - sqrt(lower)).","params":{"amount1":"The amount1 being sent in","sqrtPriceAX96":"A sqrt price representing the first tick boundary","sqrtPriceBX96":"A sqrt price representing the second tick boundary"},"returns":{"liquidity":"The amount of returned liquidity"}},"getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256)":{"params":{"amount0":"The amount of token0 being sent in","amount1":"The amount of token1 being sent in","sqrtPriceAX96":"A sqrt price representing the first tick boundary","sqrtPriceBX96":"A sqrt price representing the second tick boundary","sqrtPriceX96":"A sqrt price representing the current pool prices"},"returns":{"liquidity":"The maximum amount of liquidity received"}},"toUint128(uint256)":{"params":{"x":"The uint258 to be downcasted"},"returns":{"y":"The passed value, downcasted to uint128"}}},"version":1},"userdoc":{"kind":"user","methods":{"getAmount0ForLiquidity(uint160,uint160,uint128)":{"notice":"Computes the amount of token0 for a given amount of liquidity and a price range"},"getAmount1ForLiquidity(uint160,uint160,uint128)":{"notice":"Computes the amount of token1 for a given amount of liquidity and a price range"},"getAmountsForLiquidity(uint160,uint160,uint160,uint128)":{"notice":"Computes the token0 and token1 value for a given amount of liquidity, the current pool prices and the prices at the tick boundaries"},"getLiquidityForAmount0(uint160,uint160,uint256)":{"notice":"Computes the amount of liquidity received for a given amount of token0 and price range"},"getLiquidityForAmount1(uint160,uint160,uint256)":{"notice":"Computes the amount of liquidity received for a given amount of token1 and price range"},"getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256)":{"notice":"Computes the maximum amount of liquidity received for a given amount of token0, token1, the current pool prices and the prices at the tick boundaries"},"toUint128(uint256)":{"notice":"Downcasts uint256 to uint128"}},"version":1}},"settings":{"remappings":["@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","ds-test/=lib/v4-periphery/lib/v4-core/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/v4-core/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/","openzeppelin-contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/","permit2/=lib/v4-periphery/lib/permit2/","solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/","v4-core/=lib/v4-periphery/lib/v4-core/src/","v4-periphery/=lib/v4-periphery/"],"optimizer":{"enabled":true,"runs":800},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/utils/LiquidityMath.sol":"LiquidityMath"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/v4-periphery/lib/v4-core/src/libraries/FixedPoint96.sol":{"keccak256":"0xf0a545fc5bbc271e8dbd191413dc03e8725d1f003df4d9d36ea7cdb73058c417","urls":["bzz-raw://5d1013d8b5c93024526f129b0a9271b35c578da09bcfe6c3240ff4d590ebc196","dweb:/ipfs/QmX1GyF9jJhYGXst6PyK6HJvcfVQ69nNTnuBEBaEiAZPv7"],"license":"GPL-2.0-or-later"},"lib/v4-periphery/lib/v4-core/src/libraries/FullMath.sol":{"keccak256":"0x4fc73a00817193fd3cac1cc03d8167d21af97d75f1815a070ee31a90c702b4c2","urls":["bzz-raw://c3b2d66d36b1ad56b1ab6e2eb8a816740877b40b461c93f125e88621c8378e52","dweb:/ipfs/QmPGvMZzKQvNiWKd8aRzzdW7oAizwrMgcMtnaworDkVHFC"],"license":"MIT"},"src/utils/LiquidityMath.sol":{"keccak256":"0xa5542303f90d7348c9b2af33c16beb510b7d5cdd7ae58c4779a173aa6e1ebcfd","urls":["bzz-raw://da92e2e7ce5ac2334f43ac11141417f4d5477286bec7e372e880d566a2ee1b49","dweb:/ipfs/QmQm6jMm6EMkKqLGtm7LV286qGuQgccwdGaAzCVZaTTYB2"],"license":"UNLICENSED"}},"version":1},"id":2}